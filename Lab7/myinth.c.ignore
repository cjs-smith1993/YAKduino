#include <yakk.h>
#include "lcd.h"

#define EVENT_A_KEY  0x1
#define EVENT_B_KEY  0x2
#define EVENT_C_KEY  0x4

#define EVENT_1_KEY  0x1
#define EVENT_2_KEY  0x2
#define EVENT_3_KEY  0x4

extern YKEVENT *charEvent;
extern YKEVENT *numEvent;
extern int KeyBuffer;

void resetHandler() {
	// exit(0);
}

void mytick(void)
{

}

void keyboardHandler() {
	char c;
	c = KeyBuffer;

	if(c == 'a') YKEventSet(charEvent, EVENT_A_KEY);
	else if(c == 'b') YKEventSet(charEvent, EVENT_B_KEY);
	else if(c == 'c') YKEventSet(charEvent, EVENT_C_KEY);
	else if(c == 'd') YKEventSet(charEvent, EVENT_A_KEY | EVENT_B_KEY | EVENT_C_KEY);
	else if(c == '1') YKEventSet(numEvent, EVENT_1_KEY);
	else if(c == '2') YKEventSet(numEvent, EVENT_2_KEY);
	else if(c == '3') YKEventSet(numEvent, EVENT_3_KEY);
	else {
		printString("\nKEYPRESS (");
		// printChar(c);
		printString(") IGNORED\n");
	}
}